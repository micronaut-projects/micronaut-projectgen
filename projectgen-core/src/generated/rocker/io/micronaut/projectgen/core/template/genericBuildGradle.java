package io.micronaut.projectgen.core.template;

import java.io.IOException;
import com.fizzed.rocker.ForIterator;
import com.fizzed.rocker.RenderingException;
import com.fizzed.rocker.RockerContent;
import com.fizzed.rocker.RockerOutput;
import com.fizzed.rocker.runtime.DefaultRockerTemplate;
import com.fizzed.rocker.runtime.PlainTextUnloadedClassLoader;
// import @ [1:1]
import io.micronaut.projectgen.core.generator.Project;
// import @ [2:1]
import io.micronaut.projectgen.core.buildtools.gradle.GradleBuild;
// import @ [3:1]
import io.micronaut.projectgen.core.buildtools.gradle.GradlePlugin;
// import @ [4:1]
import io.micronaut.projectgen.core.buildtools.gradle.GradleDependency;

/*
 * Auto generated code to render template io/micronaut/projectgen/core/template/genericBuildGradle.rocker.raw
 * Do not edit this file. Changes will eventually be overwritten by Rocker parser!
 */
@SuppressWarnings("unused")
public class genericBuildGradle extends com.fizzed.rocker.runtime.DefaultRockerModel {

    static public com.fizzed.rocker.ContentType getContentType() { return com.fizzed.rocker.ContentType.RAW; }
    static public String getTemplateName() { return "genericBuildGradle.rocker.raw"; }
    static public String getTemplatePackageName() { return "io.micronaut.projectgen.core.template"; }
    static public String getHeaderHash() { return "1636430453"; }
    static public long getModifiedAt() { return 1740584052062L; }
    static public String[] getArgumentNames() { return new String[] { "project", "gradleBuild", "mainClassName", "version", "groupId" }; }

    // argument @ [5:2]
    private Project project;
    // argument @ [5:2]
    private GradleBuild gradleBuild;
    // argument @ [5:2]
    private String mainClassName;
    // argument @ [5:2]
    private String version;
    // argument @ [5:2]
    private String groupId;

    public genericBuildGradle project(Project project) {
        this.project = project;
        return this;
    }

    public Project project() {
        return this.project;
    }

    public genericBuildGradle gradleBuild(GradleBuild gradleBuild) {
        this.gradleBuild = gradleBuild;
        return this;
    }

    public GradleBuild gradleBuild() {
        return this.gradleBuild;
    }

    public genericBuildGradle mainClassName(String mainClassName) {
        this.mainClassName = mainClassName;
        return this;
    }

    public String mainClassName() {
        return this.mainClassName;
    }

    public genericBuildGradle version(String version) {
        this.version = version;
        return this;
    }

    public String version() {
        return this.version;
    }

    public genericBuildGradle groupId(String groupId) {
        this.groupId = groupId;
        return this;
    }

    public String groupId() {
        return this.groupId;
    }

    static public genericBuildGradle template(Project project, GradleBuild gradleBuild, String mainClassName, String version, String groupId) {
        return new genericBuildGradle()
            .project(project)
            .gradleBuild(gradleBuild)
            .mainClassName(mainClassName)
            .version(version)
            .groupId(groupId);
    }

    @Override
    protected DefaultRockerTemplate buildTemplate() throws RenderingException {
        // optimized for convenience (runtime auto reloading enabled if rocker.reloading=true)
        return com.fizzed.rocker.runtime.RockerRuntime.getInstance().getBootstrap().template(this.getClass(), this);
    }

    static public class Template extends com.fizzed.rocker.runtime.DefaultRockerTemplate {

        // \n
        static private final byte[] PLAIN_TEXT_0_0;
        // \nplugins {\n
        static private final byte[] PLAIN_TEXT_1_0;
        // \n    id(\"
        static private final byte[] PLAIN_TEXT_2_0;
        // \") 
        static private final byte[] PLAIN_TEXT_3_0;
        // \n}\n
        static private final byte[] PLAIN_TEXT_4_0;
        // \nversion = \"
        static private final byte[] PLAIN_TEXT_5_0;
        // \"\n
        static private final byte[] PLAIN_TEXT_6_0;
        // \ngroup = \"
        static private final byte[] PLAIN_TEXT_7_0;
        // \nrepositories {\n
        static private final byte[] PLAIN_TEXT_8_0;
        // \ndependencies {\n
        static private final byte[] PLAIN_TEXT_9_0;
        // \n    
        static private final byte[] PLAIN_TEXT_10_0;
        // \napplication {\n    mainClass = \"
        static private final byte[] PLAIN_TEXT_11_0;
        // .
        static private final byte[] PLAIN_TEXT_12_0;
        // \"\n}\n
        static private final byte[] PLAIN_TEXT_13_0;

        static {
            PlainTextUnloadedClassLoader loader = PlainTextUnloadedClassLoader.tryLoad(genericBuildGradle.class.getClassLoader(), genericBuildGradle.class.getName() + "$PlainText", "UTF-8");
            PLAIN_TEXT_0_0 = loader.tryGet("PLAIN_TEXT_0_0");
            PLAIN_TEXT_1_0 = loader.tryGet("PLAIN_TEXT_1_0");
            PLAIN_TEXT_2_0 = loader.tryGet("PLAIN_TEXT_2_0");
            PLAIN_TEXT_3_0 = loader.tryGet("PLAIN_TEXT_3_0");
            PLAIN_TEXT_4_0 = loader.tryGet("PLAIN_TEXT_4_0");
            PLAIN_TEXT_5_0 = loader.tryGet("PLAIN_TEXT_5_0");
            PLAIN_TEXT_6_0 = loader.tryGet("PLAIN_TEXT_6_0");
            PLAIN_TEXT_7_0 = loader.tryGet("PLAIN_TEXT_7_0");
            PLAIN_TEXT_8_0 = loader.tryGet("PLAIN_TEXT_8_0");
            PLAIN_TEXT_9_0 = loader.tryGet("PLAIN_TEXT_9_0");
            PLAIN_TEXT_10_0 = loader.tryGet("PLAIN_TEXT_10_0");
            PLAIN_TEXT_11_0 = loader.tryGet("PLAIN_TEXT_11_0");
            PLAIN_TEXT_12_0 = loader.tryGet("PLAIN_TEXT_12_0");
            PLAIN_TEXT_13_0 = loader.tryGet("PLAIN_TEXT_13_0");
        }

        // argument @ [5:2]
        protected final Project project;
        // argument @ [5:2]
        protected final GradleBuild gradleBuild;
        // argument @ [5:2]
        protected final String mainClassName;
        // argument @ [5:2]
        protected final String version;
        // argument @ [5:2]
        protected final String groupId;

        public Template(genericBuildGradle model) {
            super(model);
            __internal.setCharset("UTF-8");
            __internal.setContentType(getContentType());
            __internal.setTemplateName(getTemplateName());
            __internal.setTemplatePackageName(getTemplatePackageName());
            this.project = model.project();
            this.gradleBuild = model.gradleBuild();
            this.mainClassName = model.mainClassName();
            this.version = model.version();
            this.groupId = model.groupId();
        }

        @Override
        protected void __doRender() throws IOException, RenderingException {
            // PlainText @ [5:103]
            __internal.aboutToExecutePosInTemplate(5, 103);
            __internal.writeValue(PLAIN_TEXT_0_0);
            // IfBlockBegin @ [6:1]
            __internal.aboutToExecutePosInTemplate(6, 1);
            if (gradleBuild.getPlugins().size() > 0) {
                // PlainText @ [6:43]
                __internal.aboutToExecutePosInTemplate(6, 43);
                __internal.writeValue(PLAIN_TEXT_1_0);
                // ForBlockBegin @ [8:1]
                __internal.aboutToExecutePosInTemplate(8, 1);
                try {
                    final com.fizzed.rocker.runtime.IterableForIterator<GradlePlugin> __forIterator0 = new com.fizzed.rocker.runtime.IterableForIterator<GradlePlugin>(gradleBuild.getPlugins());
                    while (__forIterator0.hasNext()) {
                        final GradlePlugin gradlePlugin = __forIterator0.next();
                        try {
                            // PlainText @ [8:62]
                            __internal.aboutToExecutePosInTemplate(8, 62);
                            __internal.writeValue(PLAIN_TEXT_2_0);
                            // ValueExpression @ [9:9]
                            __internal.aboutToExecutePosInTemplate(9, 9);
                            __internal.renderValue(gradlePlugin.getId(), false);
                            // PlainText @ [9:30]
                            __internal.aboutToExecutePosInTemplate(9, 30);
                            __internal.writeValue(PLAIN_TEXT_3_0);
                            // EvalExpression @ [9:33]
                            __internal.aboutToExecutePosInTemplate(9, 33);
                            __internal.renderValue((gradlePlugin.getVersion() != null ? "version \"" + gradlePlugin.getVersion() + "\"" : ""), false);
                            // PlainText @ [9:124]
                            __internal.aboutToExecutePosInTemplate(9, 124);
                            __internal.writeValue(PLAIN_TEXT_0_0);
                            // ForBlockEnd @ [8:1]
                            __internal.aboutToExecutePosInTemplate(8, 1);
                        } catch (com.fizzed.rocker.runtime.ContinueException e) {
                            // support for continuing for loops
                        }
                    } // for end @ [8:1]
                } catch (com.fizzed.rocker.runtime.BreakException e) {
                    // support for breaking for loops
                }
                // PlainText @ [10:2]
                __internal.aboutToExecutePosInTemplate(10, 2);
                __internal.writeValue(PLAIN_TEXT_4_0);
                // IfBlockEnd @ [6:1]
                __internal.aboutToExecutePosInTemplate(6, 1);
            } // if end @ [6:1]
            // PlainText @ [12:2]
            __internal.aboutToExecutePosInTemplate(12, 2);
            __internal.writeValue(PLAIN_TEXT_0_0);
            // IfBlockBegin @ [13:1]
            __internal.aboutToExecutePosInTemplate(13, 1);
            if (version != null) {
                // PlainText @ [13:24]
                __internal.aboutToExecutePosInTemplate(13, 24);
                __internal.writeValue(PLAIN_TEXT_5_0);
                // EvalExpression @ [14:12]
                __internal.aboutToExecutePosInTemplate(14, 12);
                __internal.renderValue((version), false);
                // PlainText @ [14:22]
                __internal.aboutToExecutePosInTemplate(14, 22);
                __internal.writeValue(PLAIN_TEXT_6_0);
                // IfBlockEnd @ [13:1]
                __internal.aboutToExecutePosInTemplate(13, 1);
            } // if end @ [13:1]
            // PlainText @ [15:2]
            __internal.aboutToExecutePosInTemplate(15, 2);
            __internal.writeValue(PLAIN_TEXT_0_0);
            // IfBlockBegin @ [16:1]
            __internal.aboutToExecutePosInTemplate(16, 1);
            if (groupId != null) {
                // PlainText @ [16:24]
                __internal.aboutToExecutePosInTemplate(16, 24);
                __internal.writeValue(PLAIN_TEXT_7_0);
                // EvalExpression @ [17:10]
                __internal.aboutToExecutePosInTemplate(17, 10);
                __internal.renderValue((groupId), false);
                // PlainText @ [17:20]
                __internal.aboutToExecutePosInTemplate(17, 20);
                __internal.writeValue(PLAIN_TEXT_6_0);
                // IfBlockEnd @ [16:1]
                __internal.aboutToExecutePosInTemplate(16, 1);
            } // if end @ [16:1]
            // PlainText @ [18:2]
            __internal.aboutToExecutePosInTemplate(18, 2);
            __internal.writeValue(PLAIN_TEXT_0_0);
            // IfBlockBegin @ [19:1]
            __internal.aboutToExecutePosInTemplate(19, 1);
            if (gradleBuild.getRepositories().size() > 0) {
                // PlainText @ [19:48]
                __internal.aboutToExecutePosInTemplate(19, 48);
                __internal.writeValue(PLAIN_TEXT_8_0);
                // ValueExpression @ [21:1]
                __internal.aboutToExecutePosInTemplate(21, 1);
                __internal.renderValue(gradleBuild.renderRepositories(), false);
                // PlainText @ [21:34]
                __internal.aboutToExecutePosInTemplate(21, 34);
                __internal.writeValue(PLAIN_TEXT_4_0);
                // IfBlockEnd @ [19:1]
                __internal.aboutToExecutePosInTemplate(19, 1);
            } // if end @ [19:1]
            // PlainText @ [23:2]
            __internal.aboutToExecutePosInTemplate(23, 2);
            __internal.writeValue(PLAIN_TEXT_0_0);
            // IfBlockBegin @ [24:1]
            __internal.aboutToExecutePosInTemplate(24, 1);
            if (gradleBuild.getDependencies().size() > 0) {
                // PlainText @ [24:48]
                __internal.aboutToExecutePosInTemplate(24, 48);
                __internal.writeValue(PLAIN_TEXT_9_0);
                // ForBlockBegin @ [26:1]
                __internal.aboutToExecutePosInTemplate(26, 1);
                try {
                    final com.fizzed.rocker.runtime.IterableForIterator<GradleDependency> __forIterator1 = new com.fizzed.rocker.runtime.IterableForIterator<GradleDependency>(gradleBuild.getDependencies());
                    while (__forIterator1.hasNext()) {
                        final GradleDependency dependency = __forIterator1.next();
                        try {
                            // PlainText @ [26:69]
                            __internal.aboutToExecutePosInTemplate(26, 69);
                            __internal.writeValue(PLAIN_TEXT_10_0);
                            // ValueExpression @ [27:5]
                            __internal.aboutToExecutePosInTemplate(27, 5);
                            __internal.renderValue(dependency.toSnippet(), false);
                            // PlainText @ [27:28]
                            __internal.aboutToExecutePosInTemplate(27, 28);
                            __internal.writeValue(PLAIN_TEXT_0_0);
                            // ForBlockEnd @ [26:1]
                            __internal.aboutToExecutePosInTemplate(26, 1);
                        } catch (com.fizzed.rocker.runtime.ContinueException e) {
                            // support for continuing for loops
                        }
                    } // for end @ [26:1]
                } catch (com.fizzed.rocker.runtime.BreakException e) {
                    // support for breaking for loops
                }
                // PlainText @ [28:2]
                __internal.aboutToExecutePosInTemplate(28, 2);
                __internal.writeValue(PLAIN_TEXT_4_0);
                // IfBlockEnd @ [24:1]
                __internal.aboutToExecutePosInTemplate(24, 1);
            } // if end @ [24:1]
            // PlainText @ [30:2]
            __internal.aboutToExecutePosInTemplate(30, 2);
            __internal.writeValue(PLAIN_TEXT_0_0);
            // IfBlockBegin @ [31:1]
            __internal.aboutToExecutePosInTemplate(31, 1);
            if (mainClassName != null) {
                // PlainText @ [31:30]
                __internal.aboutToExecutePosInTemplate(31, 30);
                __internal.writeValue(PLAIN_TEXT_11_0);
                // EvalExpression @ [33:18]
                __internal.aboutToExecutePosInTemplate(33, 18);
                __internal.renderValue((project.getPackageName()), false);
                // PlainText @ [33:45]
                __internal.aboutToExecutePosInTemplate(33, 45);
                __internal.writeValue(PLAIN_TEXT_12_0);
                // ValueExpression @ [33:46]
                __internal.aboutToExecutePosInTemplate(33, 46);
                __internal.renderValue(mainClassName, false);
                // PlainText @ [33:60]
                __internal.aboutToExecutePosInTemplate(33, 60);
                __internal.writeValue(PLAIN_TEXT_13_0);
                // IfBlockEnd @ [31:1]
                __internal.aboutToExecutePosInTemplate(31, 1);
            } // if end @ [31:1]
            // PlainText @ [35:2]
            __internal.aboutToExecutePosInTemplate(35, 2);
            __internal.writeValue(PLAIN_TEXT_0_0);
            // ValueExpression @ [36:1]
            __internal.aboutToExecutePosInTemplate(36, 1);
            __internal.renderValue(gradleBuild.renderExtensions(), false);
            // PlainText @ [36:32]
            __internal.aboutToExecutePosInTemplate(36, 32);
            __internal.writeValue(PLAIN_TEXT_0_0);
        }
    }

    private static class PlainText {

        static private final String PLAIN_TEXT_0_0 = "\n";
        static private final String PLAIN_TEXT_1_0 = "\nplugins {\n";
        static private final String PLAIN_TEXT_2_0 = "\n    id(\"";
        static private final String PLAIN_TEXT_3_0 = "\") ";
        static private final String PLAIN_TEXT_4_0 = "\n}\n";
        static private final String PLAIN_TEXT_5_0 = "\nversion = \"";
        static private final String PLAIN_TEXT_6_0 = "\"\n";
        static private final String PLAIN_TEXT_7_0 = "\ngroup = \"";
        static private final String PLAIN_TEXT_8_0 = "\nrepositories {\n";
        static private final String PLAIN_TEXT_9_0 = "\ndependencies {\n";
        static private final String PLAIN_TEXT_10_0 = "\n    ";
        static private final String PLAIN_TEXT_11_0 = "\napplication {\n    mainClass = \"";
        static private final String PLAIN_TEXT_12_0 = ".";
        static private final String PLAIN_TEXT_13_0 = "\"\n}\n";

    }

}
