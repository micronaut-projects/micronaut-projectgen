@import io.micronaut.projectgen.core.generator.Project
@import io.micronaut.projectgen.core.buildtools.gradle.GradleBuild
@import io.micronaut.projectgen.core.buildtools.gradle.GradlePlugin
@import io.micronaut.projectgen.core.buildtools.gradle.GradleDsl
@import java.util.Collection;
@args (Project project, GradleBuild gradleBuild, boolean hasMultiProjectFeature, Collection<String> moduleNames)

@if(!gradleBuild.getSettingsImports().isEmpty()) {
@for (String settingsImport : gradleBuild.getSettingsImports()) {
import @(settingsImport)
}
}

@gradleBuild.renderSettingsPluginsManagement()

@if(!gradleBuild.getSettingsPlugins().isEmpty()) {
plugins {
@for (GradlePlugin gradlePlugin : gradleBuild.getSettingsPlugins()) {
    id("@gradlePlugin.getId()") @(gradlePlugin.getVersion() != null ? "version(\"" + gradlePlugin.getVersion() + "\")" : "")
}
}

}

@gradleBuild.renderSettingsExtensions()

rootProject.name="@project.getName()"

@if (hasMultiProjectFeature || moduleNames.size() > 1) {
@for (String moduleName : moduleNames) {
include("@moduleName")
}
}
